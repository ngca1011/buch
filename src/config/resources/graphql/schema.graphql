# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Filmdaten zu lesen"
type Query {
  filme(titel: String): [Film!]
  film(id: ID!): Film
}

"Funktionen, um Filme neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: FilmInput!): CreatePayload

  # Mutation, weil z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  login(username: String!, password: String!): LoginResult
}

"Daten zum Titel eines Filmes"
type Titel {
  titel: String!
  originaltitel: String
  serienname: String
}

"Daten zum Schauspieler eines Filmes"
type Schauspieler {
  vorname: String!
  name: String!
  geschlecht: String
  email: String
  telefonnummer: String
}

"Datenschema zu einem Film, der geschaut wird"
type Film {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  rating: Int
  filmstart: String
  dauer: Int
  sprache: String
  direktor: String
  genres: [String]
  titel: Titel
  schauspielers: [Schauspieler]
  erzeugt: String
  aktualisiert: String
}

"Daten zum Titel eines neuen Filmes"
input TitelInput {
  titel: String!
  originaltitel: String
  serienname: String
}

"Daten zu den Schauspielers eines Filmes"
input SchauspielerInput {
  vorname: String!
  name: String!
  geschlecht: String
  email: String
  telefonnummer: String
}

"Daten für ein neuen Film"
input FilmInput {
  rating: Int
  filmstart: String
  dauer: Int
  sprache: String
  direktor: String
  genres: [String]
  titel: TitelInput
  schauspielers: [SchauspielerInput]
}

type CreatePayload {
  id: Int
}

type LoginResult {
  token: String!
  expiresIn: String!
  roles: [String]!
}
